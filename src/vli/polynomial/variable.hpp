/*
 *Very Large Integer Library, License - Version 1.0 - May 3rd, 2012
 *
 *Andreas Hehn - Swiss Federal Institute of technology Zurich.
 *
 *Permission is hereby granted, free of charge, to any person or organization
 *obtaining a copy of the software and accompanying documentation covered by
 *this license (the "Software") to use, reproduce, display, distribute,
 *execute, and transmit the Software, and to prepare derivative works of the
 *Software, and to permit third-parties to whom the Software is furnished to
 *do so, all subject to the following:
 *
 *The copyright notices in the Software and this entire statement, including
 *the above license grant, this restriction and the following disclaimer,
 *must be included in all copies of the Software, in whole or in part, and
 *all derivative works of the Software, unless such copies or derivative
 *works are solely in the form of machine-executable object code generated by
 *a source language processor.
 *
 *THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 *SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 *FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 *ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *DEALINGS IN THE SOFTWARE.
 */


#ifndef VLI_POLYNOMIAL_VARIABLE_HPP
#define VLI_POLYNOMIAL_VARIABLE_HPP
#include <boost/mpl/char.hpp>

namespace vli {

/*! \class var
        \brief This class models a variable

        This class just encapsulates the char of the variables of the polynomials
*/
template <char X>
class var
: public boost::mpl::char_<X> {
};

/*! \cond */
class no_variable {
};
/*! \endcond */

    
/*! \class max_order_each
     \brief This class models a dense polynomial
     
     This class just encapsulates the order of the polynomials
*/
template <int Order>
struct max_order_each {
    static unsigned int const value = Order;
};

/*! \class max_order_combined
    \brief This class models a triangualar polynomial
 
     This class just encapsulates the order of the polynomials
*/
template <int Order>
struct max_order_combined {
    static unsigned int const value = Order;
};


} // end namespace vli
#endif //VLI_POLYNOMIAL_VARIABLE_HPP
